//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

public class WorldGeneration
{
		private static volatile WorldGeneration instance;
	
		
	
		private WorldGeneration ()
		{

		}
		public static WorldGeneration Instance {
				get {
						if (instance == null) 
								instance = new WorldGeneration ();
						return instance;
				}
		}
		
		
		public void createPerlin (byte[,,] data, int regionX, int regionY, int regionZ)
		{
				for (int x=0; x<data.GetLength(0); x++) {
						for (int z=0; z<data.GetLength(2); z++) {
								int xi = regionX + x;
								int zi = regionZ + z;
						

								int stone = PerlinNoise (xi, 751, zi, 550, 7f, 3f);
								//int lowHills = PerlinNoise (xi, 127, zi, 20, 1.5f, 1.8f) + 10;
								int dirt = 32;
								int val = 0;
								val = Math.Max (stone, dirt);
								//val = Math.Max (lowHills, val);
								for (int y=0; y<data.GetLength(1); y++) {
										int yi = regionY + y;
										if (yi <= val) {
												data [x, y, z] = 1;
										}
					
								}
						}
				}
		}
		
		public void createFlatBiome (byte[,,] data)
		{
				for (int x=0; x<data.GetLength(0); x++) {
						for (int z=0; z<data.GetLength(2); z++) {
								for (int y=0; y<data.GetLength(1); y++) {
										if (y <= (data.GetLength (1) / 2)) {
												data [x, y, z] = 1;
										}
								}
						}
				}	
		}
		
		private int PerlinNoise (float x, int y, float z, float scale, float height, float power)
		{
				float rValue;
				rValue = Noise.GetNoise (((double)x) / scale, ((double)y) / scale, ((double)z) / scale);
				rValue *= height;
		
				if (power != 0) {
						rValue = Mathf.Pow (rValue, power);
				}
		
				return (int)rValue;
		}
	
}

