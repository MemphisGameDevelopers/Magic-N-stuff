//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class ChunkManager
{
		private LinkedList<GameObject> chunkPool;
		
		private static volatile ChunkManager instance;
		
		
		private ChunkManager ()
		{
				chunkPool = new LinkedList<GameObject> ();
				int chunkCount = 2024;
				while (chunkPool.Count < chunkCount) {
						GameObject newChunk = GameObject.Instantiate (Resources.Load ("Voxel Generators/Chunk")) as GameObject;
						newChunk.SetActive (false);
						newChunk.transform.rotation = new Quaternion (0, 0, 0, 0);
						chunkPool.AddLast (newChunk);
				}
		}
		public static ChunkManager Instance {
				get {
						if (instance == null) 
								instance = new ChunkManager ();
						return instance;
				}
		}
		
		public GameObject getChunk ()
		{
				if (chunkPool.Count > 0) {
						LinkedListNode<GameObject> chunkGO = chunkPool.First;
						chunkPool.RemoveFirst ();
						return chunkGO.Value;
				} else {
						return null;
				}
		}
		
		public void freeChunk (GameObject chunk)
		{
				chunk.gameObject.SetActive (false);
				chunkPool.AddLast (chunk);
		}
		
}


