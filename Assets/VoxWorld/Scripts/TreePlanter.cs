//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class TreePlanter
{
		public TreePlanter ()
		{
		}

		public static void generateTrees (Region region)
		{
				//scan for air only region.
				if (region.flags.isEmptyAir) {
						return;
				}
				//Create a plane with the same dimensions as the region.
				int[,] treeplane = new int[region.regionXZ, region.regionXZ];
				int treeCount = 100;
				System.Random rand = new System.Random ();
				LinkedList<Vector3> treePositions = new LinkedList<Vector3> ();

				for (int i = 0; i < treeCount; i++) {
						int x_local = rand.Next (0, region.regionXZ);
						int z_local = rand.Next (0, region.regionXZ);
						int y_local = dropFromSky (region, x_local, z_local);
						if (y_local <= 0 && y_local < region.regionY) {
								region.data [x_local, y_local, z_local] = (byte)8; //TODO: random element id for trees.
						}
				}
		}
		
		private static  int dropFromSky (Region region, int x, int z)
		{

				//Drop the walker from the given starting height.
				for (int y = region.regionY - 1; y >= 0; y--) {
						if (region.data [x, y, z] != 0) {
								return y + 1;  //the air right above the block.
						}
				}
				return -1;  //fell through
		}
}


