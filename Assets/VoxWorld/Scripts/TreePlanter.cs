//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class TreePlanter
{
		public TreePlanter ()
		{
		}

		public static LinkedList<Vector3> generateTrees (VoxelWorld world, Region region)
		{
				//Create a plane with the same dimensions as the region.
				int[,] treeplane = new int[region.regionX, region.regionX];
				int treeCount = 40;
				System.Random rand = new System.Random ();
				TerrainWalker walker = new TerrainWalker (world);
				LinkedList<Vector3> treePositions = new LinkedList<Vector3> ();

				for (int i = 0; i < treeCount; i++) {
						int x_local = rand.Next (0, region.regionX);
						int z_local = rand.Next (0, region.regionZ);
						if (treeplane [x_local, z_local] != 1) {
								int world_z = z_local + region.getBlockOffsetZ ();
								int world_x = x_local + region.getBlockOffsetX ();
								treeplane [x_local, z_local] = 1; // a tree
								walker.gotoPosition (world_x, world_z);
								treePositions.AddLast (new Vector3 (x_local, walker.blockY, z_local));
						}
				}
				return treePositions;
		}
}


